>>> from fingernail import expect

>>> expect([]).to_be_empty

>>> expect([1]).to_be_empty
Traceback (most recent call last):
    ...
BrokenExpectation: expected [1] to be empty


>>> expect(()).to_be_empty

>>> expect((1,)).to_be_empty
Traceback (most recent call last):
    ...
BrokenExpectation: expected (1,) to be empty


>>> expect('').to_be_empty
>>> expect('a').to_be_empty
Traceback (most recent call last):
    ...
BrokenExpectation: expected 'a' to be empty

>>> expect({}).to_be_empty

>>> class MyCollection:
...     def __init__(self, count):
...          self.count = count
...     def __len__(self):
...          return self.count

>>> expect(MyCollection(0)).to_be_empty

